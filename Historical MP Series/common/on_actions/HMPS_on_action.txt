HMPS_small_nation_inno_fix = {
	effect = {
		#small nation innovation fix
		if = {
			limit = {
				has_modifier = small_nation_inno_modifier
			}
			remove_modifier = small_nation_inno_modifier
		}
		#50% innovation
		if = {
			limit = { 
				total_population_including_subjects < 2500000
			}
			add_modifier = {
				name = small_nation_inno_modifier
				multiplier = 5
			}
		}
		#40% innovation
		else_if = {
			limit = { 
				total_population_including_subjects < 3000000
			}
			add_modifier = {
				name = small_nation_inno_modifier
				multiplier = 4
			}
		}
		#30% innovation
		else_if = {
			limit = {
				total_population_including_subjects < 3500000
			}
			add_modifier = {
				name = small_nation_inno_modifier
				multiplier = 3
			}
		}
		#20% innovation
		else_if = {
			limit = {
				total_population_including_subjects < 4000000
			}
			add_modifier = {
				name = small_nation_inno_modifier
				multiplier = 2
			}
		}
		#10% innovation
		else_if = {
			limit = {
				total_population_including_subjects < 4500000
			}
			add_modifier = {
				name = small_nation_inno_modifier
			}
		}
		#5% innovation
		else_if = {
			limit = {
				total_population_including_subjects < 5000000
			}
			add_modifier = {
				name = small_nation_inno_modifier
				multiplier = 0.5
			}
		}
	}
}

HMPS_remove_bad_unis = {
	effect = {
		if = {
			limit = {
				is_incorporated = no
				has_building = building_university
			}
			remove_building = building_university
		}
	}
}

HMPS_rev_handling = {
	effect = {
		#disable revolts for ai with <= 3 states
		#disable revolts for ai subjects
		if = {
			limit = {
				is_player = no
				is_immune_to_revolutions = no
				OR = {
					AND = {
						any_scope_state = {
							count = all
							add_to_temporary_list = state_amount
						}
						list_size = { name = state_amount value <= 3 }
					}
					is_subject = yes
				}
			}
			set_immune_to_revolutions = yes
			#add_modifier = {
			#	name = dev_test_modifier
			#}
		}
		#disable player subjects/non subjects from being immune to revs
		#disable large ai/small players from being immune to revs
		if = {
			limit = {
				is_immune_to_revolutions = yes
				OR = {
					is_player = yes
					AND = {
						is_subject = no
						any_scope_state = {
							count = all
							add_to_temporary_list = state_amount_2
						}
						list_size = { name = state_amount_2 value > 3 }
					}
				}
			}
			set_immune_to_revolutions = no
		}
	}
}


HMPS_Check_for_GM = {
	effect = {
		if = {
			limit = {
				has_global_variable = player_gm
				any_country = {
					has_modifier = game_master
					is_player = no
				}
			}
			random_country = {
				limit = {
					has_modifier = game_master
				}
				remove_modifier = game_master
				remove_global_variable = player_gm
			}
		}
	}
}

HMPS_ai_modifiers = {
	effect = {
		if = {
			limit = {
				has_modifier = ai_rebellion_buff
				OR = {
					is_player = yes
					is_revolutionary = no
				}
			}
			remove_modifier = ai_rebellion_buff
		}
	}
}

#Happens to on_revolution
HMPS_revolution_boost = {
	effect = {
		if = {
			limit = {
				is_player = yes
				scope:target = {
					is_player = no
				}
			}
			scope:target = {
				add_modifier = {
					name = ai_rebellion_buff
				}
			}
		}
		
	}
}

#China dominion creation
#One should be for if you don't have any other china states, the other should be to add china states to a dominion, the other should be for if you have a chinese puppet

HMPS_China_Puppet = {
	effect = {
		ROOT = {
			if = {
				limit = {
					is_subject = no
					any_primary_culture = {
						OR = {
							has_discrimination_trait = sinosphere
							has_discrimination_trait = han_chinese
						}
					}
					any_scope_state = {
						has_variable = china_state_foreign_owned
					}
				}
				every_scope_state = {
					limit = {
						has_variable = china_state_foreign_owned
					}
					remove_variable = china_state_foreign_owned
				}
			}
			if = {
				limit = {
					#is_subject = no
					NOT = {
						any_primary_culture = {
							OR = {
								has_discrimination_trait = sinosphere
								has_discrimination_trait = han_chinese
							}
						}
					}
					any_scope_state = {
						OR = {
							region = sr:region_north_china
							region = sr:region_south_china
						}
						NOT = { has_variable = china_state_foreign_owned }
						state_population > 3500000
					}
					#code to check if you already have a chinese dominion and puppet
				}
				every_scope_state = {
					limit = {
						OR = {
							region = sr:region_north_china
							region = sr:region_south_china
						}
						state_population >= 3500000
						NOT = { has_variable = china_state_foreign_owned }
					}
					set_variable = chinese_state_to_cede
				}
				random_scope_state = {
					limit = {
						has_variable = chinese_state_to_cede
					}
					save_scope_as = china_puppet_capital_scope
				}
				create_dynamic_country = {
					origin = root
					country_type = colonial
					tier = principality
					capital = scope:china_puppet_capital_scope
					cede_state_trigger = {
						has_variable = chinese_state_to_cede
					}
					on_created = {
						set_variable = china_subject_var
						every_scope_state = {
							remove_variable = chinese_state_to_cede
							set_variable = china_state_foreign_owned
						}
						add_primary_culture = cu:han
						activate_law = law_type:law_industry_banned
						activate_law = law_type:law_republic
						activate_law = law_type:law_total_separation
					}
				}
				if = {
					limit = {
						root = {
							is_country_type = recognized
						}
					}
					create_diplomatic_pact = {
						country = scope:china_puppet_capital_scope.owner
						type = dominion
					}
				}
				if = {
					limit = {
						root = {
							is_country_type = unrecognized
						}
					}
					create_diplomatic_pact = {
						country = scope:china_puppet_capital_scope.owner
						type = tributary
					}
				}
				create_truce = {
					country = scope:china_puppet_capital_scope.owner
					months = 60
				}
			}
		}
	}
}

HMPS_France_Pop_Growth = {
	effect = {
		if = {
			limit = {
				NOT = { has_global_variable = french_pop_nerf }
			}
			c:FRA = {	
				every_scope_state = {
					limit = {
						NOT = { state_region = s:STATE_ALSACE_LORRAINE }
						state_is_in_europe = yes
					}
					add_modifier = {
						name = france_baby_bust			
						is_decaying = yes
						years = 100
					}
					add_modifier = {
						name = france_early_game_birth_fix			
						is_decaying = yes
						years = 30
					}
					set_global_variable = french_pop_nerf
				}
			}
		}
	}
}

HMPS_rr_counting = {
	effect = {
		# when a railroad finishes expanding, increase railroad variable
		if = {
			limit = {
				is_building_type = building_railway
			}
			this.owner = {
				trigger_event = {
					id = "railroad_bubble.1"
				}
			}
		}
	}
}

decentralized_pop_fix = {
	effect = {
		every_country = {
			limit = {
				is_country_type = decentralized
			}
			every_scope_state = {
				limit = {
					NOT = {
						has_modifier = decentralized_sol
					}
				}
				add_modifier = {
					name = decentralized_sol
				}
			}
		}
		every_country = {
			limit = {
				NOT = { is_country_type = decentralized }
			}
			every_scope_state = {
				limit = {
					has_modifier = decentralized_sol
				}
				add_modifier = {
					name = decentralized_sol
				}
			}
		}
	}
}

HMPS_China_Ports_Fracture = {
	effect = {
		if = {
			limit = {
				has_journal_entry = je_warlord_china
			}
			every_state = {
				limit = {
					state_region = {
						OR = {
							is_homeland = cu:han
							is_homeland = cu:manchu
						}
					}
					ROOT ?= owner
					is_split_state = yes
					NOT = { has_modifier = chinese_treaty_port }
				}
				add_modifier = {
					name = chinese_treaty_port
				}
				owner = {
					change_global_variable = {
						name = china_warlord_explosion
						add = 0.2
					}
				}
			}
			every_state = {
				limit = {
					is_split_state = no
					ROOT ?= owner
					has_modifier = chinese_treaty_port
				}
				remove_modifier = chinese_treaty_port
				owner = {
					change_global_variable = {
						name = china_warlord_explosion
						add = -0.1
					}
				}
			}
		}
	}
}

HMPS_Subject_Penalty = {
	effect = {
		if = {
			limit = {
				is_subject_type = subject_type_protectorate
				NOT = { has_modifier = subject_political_penalty }
			}
			add_modifier = {
				name = subject_political_penalty
				months = -1
			}
		}
		if = {
			limit = {
				NOT = { is_subject_type = subject_type_protectorate }
			}
			remove_modifier = subject_political_penalty
		}
	}
}

HMPS_Coastal_Capital = {
	effect = {
		if = {
			limit = {
				NOT = { has_modifier = coastal_capital }
				capital = { is_coastal = yes }
			}
			add_modifier = {
				name = coastal_capital
				months = -1
			}
		}
		if = {
			limit = {
				NOT = { has_modifier = near_coastal_capital }
				capital = {
					OR = {
						state_region = s:STATE_NANJING
						state_region = s:STATE_ILE_DE_FRANCE
						state_region = s:STATE_BRANDENBURG
						state_region = s:STATE_AUSTRIA
						state_region = s:STATE_TRANSDANUBIA
					}
				}
			}
			add_modifier = {
				name = near_coastal_capital
				months = -1
			}
		}
		if = {
			limit = {
				has_modifier = coastal_capital
				capital = {
					is_coastal = no
				}
			}
			remove_modifier = coastal_capital
		}
		if = {
			limit = {
				has_modifier = near_coastal_capital
				capital = {
					NOR = {
						state_region = s:STATE_NANJING
						state_region = s:STATE_ILE_DE_FRANCE
						state_region = s:STATE_BRANDENBURG
						state_region = s:STATE_AUSTRIA
						state_region = s:STATE_TRANSDANUBIA
					}
				}
			}
			remove_modifier = near_coastal_capital
		}
	}
}

#moved to monthly_pulse_state
HMPS_Slave_State_Migration = {
	effect = {
		if = {
			limit = {
				is_slave_state = yes
				NOT = {	
					has_modifier = slave_state_migration_debuff
				}
			}
			add_modifier = {
				name = slave_state_migration_debuff
			}
		}
		else_if = {
			limit = {
				is_slave_state = no
				has_modifier = slave_state_migration_debuff
			}
			remove_modifier = slave_state_migration_debuff
		}
	}
}

HMPS_Remove_Political_Movements = {
	effect = {
		every_political_movement = {
			limit = {
				NOT = { has_modifier = revolution_disbanded }
				OR = {
					political_movement_support > 5
					political_movement_radicalism > 0
				}
				NOT = { is_political_movement_type = movement_to_preserve }
				OR = {
					desired_law = law_type:law_peasant_levies
					desired_law = law_type:law_national_militia
					desired_law = law_type:law_professional_army
					desired_law = law_type:law_mass_conscription
					
					desired_law = law_type:law_traditionalism
					
					desired_law = law_type:law_no_poll_taxes
					desired_law = law_type:law_land_based_taxation
					desired_law = law_type:law_per_capita_based_taxation
							
					desired_law = law_type:law_no_income_taxes
					desired_law = law_type:law_low_income_tax
					desired_law = law_type:law_moderate_income_tax
					desired_law = law_type:law_high_income_tax
					
					desired_law = law_type:law_no_corporation_taxes
					desired_law = law_type:law_low_corporation_tax
					desired_law = law_type:law_moderate_corporation_tax
					desired_law = law_type:law_high_corporation_tax
					
					desired_law = law_type:law_no_consumption_taxes
					desired_law = law_type:law_low_consumption_tax
					desired_law = law_type:law_moderate_consumption_tax
					desired_law = law_type:law_high_consumption_tax
				}
			}
			add_modifier = {
				name = revolution_disbanded
				months = -1
			}
		}
	}
}

HMPS_Institution_Modifier = {
	effect = {
		every_scope_state = {
			remove_modifier = colonial_institution_resettlement
			remove_modifier = colonial_institution_exploitation
		}
		if = {
			limit = {
				institution:institution_colonial_affairs.investment = 1
				has_law = law_type:law_colonial_resettlement
			}
			every_scope_state = {
				limit = {
					is_incorporated = no
				}
				add_modifier = {
					name = colonial_institution_resettlement
				}
			}
		}
		if = {
			limit = {
				institution:institution_colonial_affairs.investment = 2
				has_law = law_type:law_colonial_resettlement
			}
			every_scope_state = {
				limit = {
					is_incorporated = no
				}
				add_modifier = {
					name = colonial_institution_resettlement
					multiplier = 2
				}
			}
		}
		if = {
			limit = {
				institution:institution_colonial_affairs.investment = 3
				has_law = law_type:law_colonial_resettlement
			}
			every_scope_state = {
				limit = {
					is_incorporated = no
				}
				add_modifier = {
					name = colonial_institution_resettlement
					multiplier = 3
				}
			}
		}
		if = {
			limit = {
				institution:institution_colonial_affairs.investment = 4
				has_law = law_type:law_colonial_resettlement
			}
			every_scope_state = {
				limit = {
					is_incorporated = no
				}
				add_modifier = {
					name = colonial_institution_resettlement
					multiplier = 4
				}
			}
		}
		if = {
			limit = {
				institution:institution_colonial_affairs.investment = 5
				has_law = law_type:law_colonial_resettlement
			}
			every_scope_state = {
				limit = {
					is_incorporated = no
				}
				add_modifier = {
					name = colonial_institution_resettlement
					multiplier = 5
				}
			}
		}
		if = {
			limit = {
				institution:institution_colonial_affairs.investment = 1
				has_law = law_type:law_colonial_exploitation
			}
			every_scope_state = {
				limit = {
					is_incorporated = no
				}
				add_modifier = {
					name = colonial_institution_exploitation
				}
			}
		}
		if = {
			limit = {
				institution:institution_colonial_affairs.investment = 2
				has_law = law_type:law_colonial_exploitation
			}
			every_scope_state = {
				limit = {
					is_incorporated = no
				}
				add_modifier = {
					name = colonial_institution_exploitation
					multiplier = 2
				}
			}
		}
		if = {
			limit = {
				institution:institution_colonial_affairs.investment = 3
				has_law = law_type:law_colonial_exploitation
			}
			every_scope_state = {
				limit = {
					is_incorporated = no
				}
				add_modifier = {
					name = colonial_institution_exploitation
					multiplier = 3
				}
			}
		}
		if = {
			limit = {
				institution:institution_colonial_affairs.investment = 4
				has_law = law_type:law_colonial_exploitation
			}
			every_scope_state = {
				limit = {
					is_incorporated = no
				}
				add_modifier = {
					name = colonial_institution_exploitation
					multiplier = 4
				}
			}
		}
		if = {
			limit = {
				institution:institution_colonial_affairs.investment = 5
				has_law = law_type:law_colonial_exploitation
			}
			every_scope_state = {
				limit = {
					is_incorporated = no
				}
				add_modifier = {
					name = colonial_institution_exploitation
					multiplier = 5
				}
			}
		}
	}
}


HMPS_China = {
	effect = {
		every_country = {
			limit = {
				is_subject = no
				has_law = law_type:law_industry_banned
			}
			activate_law = law_type:law_traditionalism
		}
		if = {
			limit = {
				NOT = { has_modifier = chinese_political_instability }
				exists = c:CHI
				THIS = c:CHI
				has_journal_entry = je_warlord_china
			}
			c:CHI = {
				add_modifier = {
					name = chinese_political_instability
					is_decaying = no
					years = -1
				}
			}
		}
		
		if = {
			limit = {
				NOT = { has_modifier = han_power_increase }
				exists = c:CHI
				THIS = c:CHI
				has_journal_entry = je_warlord_china
				has_global_variable = qing_accepted_han
			}
			c:CHI = {
				add_modifier = {
					name = han_power_increase
					is_decaying = no
					years = -1
				}
			}
		}
		if = {
			limit = {
				NOT = { has_modifier = chinese_political_instability }
				exists = c:TPG
				this = c:TPG
				has_journal_entry = je_warlord_china
			}
			c:TPG = {
				add_modifier = {
					name = chinese_political_instability
					is_decaying = no
					years = -1
				}
			}
		}
		
		if = {
			limit = {
				exists = c:CHI
				THIS = c:CHI
				has_global_variable = lost_opium_wars
				NOT = { has_modifier = chinese_opium_addiction }
				game_date <= 1846.01.01
			}
			c:CHI = {
				add_modifier = {
					name = chinese_opium_addiction
					months = 480
					is_decaying = yes
				}
			}
		}
		if = {
			limit = {
				exists = c:CHI
				THIS = c:CHI
				has_global_variable = lost_opium_wars
				NOT = { has_modifier = chinese_opium_addiction }
				game_date > 1846.01.01
				game_date <= 1856.01.01
			}
			c:CHI = {
				add_modifier = {
					name = chinese_opium_addiction
					months = 360
					is_decaying = yes
					multiplier = 0.75
				}
			}
		}
		if = {
			limit = {
				exists = c:CHI
				THIS = c:CHI
				has_global_variable = lost_opium_wars
				NOT = { has_modifier = chinese_opium_addiction }
				game_date > 1856.01.01
				game_date <= 1866.01.01
			}
			c:CHI = {
				add_modifier = {
					name = chinese_opium_addiction
					months = 240
					is_decaying = yes
					multiplier = 0.5
				}
			}
		}
		if = {
			limit = {
				exists = c:CHI
				THIS = c:CHI
				has_global_variable = lost_opium_wars
				NOT = { has_modifier = chinese_opium_addiction }
				game_date > 1866.01.01
				game_date <= 1876.01.01
			}
			c:CHI = {
				add_modifier = {
					name = chinese_opium_addiction
					months = 120
					is_decaying = yes
					multiplier = 0.25
				}
			}
		}
		
		if = {
			limit = {
				NOT = { has_modifier = china_ai_help }
				exists = c:CHI
				THIS = c:CHI
				is_player = no
			}
			c:CHI = {
				add_modifier = {
					name = china_ai_help
				}
			}
		}
		if = {
			limit = {
				has_modifier = china_ai_help
				exists = c:CHI
				THIS = c:CHI
				is_player = yes
			}
			c:CHI = { remove_modifier = china_ai_help }
		}
	}
}

HMPS_Recognition = {
	effect = {
		if = {
			limit = {
				any_country = {
					has_variable = recognition_initiator
					is_country_type = recognized
				}
				any_country = {
					has_variable = recognition_target
					is_diplomatic_play_committed_participant = no
				}
			}
			every_country = {
				limit = {
					has_variable = recognition_target
					is_diplomatic_play_committed_participant = no
				}
				add_modifier = {
					name = forced_recognisation_modifier
					months = long_modifier_time
					is_decaying = yes
				}
				remove_variable = recognition_target
			}
			every_country = {
				limit = {
					has_variable = recognition_initiator
				}
				remove_variable = recognition_initiator
			}
		}
	}
}