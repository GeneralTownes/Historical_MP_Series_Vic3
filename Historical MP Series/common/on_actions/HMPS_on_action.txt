small_nation_inno_fix = {
	effect = {
		#small nation innovation fix
		if = {
			limit = {
				has_modifier = small_nation_inno_modifier
			}
			remove_modifier = small_nation_inno_modifier
		}
		#50% innovation
		if = {
			limit = { 
				total_population_including_subjects < 2500000
			}
			add_modifier = {
				name = small_nation_inno_modifier
				multiplier = 5
			}
		}
		#40% innovation
		else_if = {
			limit = { 
				total_population_including_subjects < 3000000
			}
			add_modifier = {
				name = small_nation_inno_modifier
				multiplier = 4
			}
		}
		#30% innovation
		else_if = {
			limit = {
				total_population_including_subjects < 3500000
			}
			add_modifier = {
				name = small_nation_inno_modifier
				multiplier = 3
			}
		}
		#20% innovation
		else_if = {
			limit = {
				total_population_including_subjects < 4000000
			}
			add_modifier = {
				name = small_nation_inno_modifier
				multiplier = 2
			}
		}
		#10% innovation
		else_if = {
			limit = {
				total_population_including_subjects < 4500000
			}
			add_modifier = {
				name = small_nation_inno_modifier
			}
		}
		#5% innovation
		else_if = {
			limit = {
				total_population_including_subjects < 5000000
			}
			add_modifier = {
				name = small_nation_inno_modifier
				multiplier = 0.5
			}
		}
	}
}


check_for_gm = {
	effect = {
		if = {
			limit = {
				any_country = {
					has_modifier = game_master
					is_player = no
				}
			}
			random_country = {
				limit = {
					has_modifier = game_master
				}
			remove_modifier = game_master
			remove_global_variable = player_gm
			}
		}
	}
}

ai_modifiers = {
	effect = {
		if = {
			limit = {
				has_modifier = ai_rebellion_buff
				OR = {
					is_player = yes
					is_revolutionary = no
				}
			}
			remove_modifier = ai_rebellion_buff
		}
	}
}

#Happens to on_revolution
HMPS_revolution_boost = {
	effect = {
		if = {
			limit = {
				is_player = yes
				scope:target = {
					is_player = no
				}
			}
			scope:target = {
				add_modifier = {
					name = ai_rebellion_buff
				}
			}
		}
		
	}
}

#China dominion creation
#One should be for if you don't have any other china states, the other should be to add china states to a dominion, the other should be for if you have a chinese puppet

HMPS_China_Puppet = {
	effect = {
		ROOT = {
			if = {
				limit = {
					is_subject = no
					any_primary_culture = {
						OR = {
							has_discrimination_trait = sinosphere
							has_discrimination_trait = han_chinese
						}
					}
					any_scope_state = {
						has_variable = china_state_foreign_owned
					}
				}
				every_scope_state = {
					limit = {
						has_variable = china_state_foreign_owned
					}
					remove_variable = china_state_foreign_owned
				}
			}
			if = {
				limit = {
					is_subject = no
					NOT = {
						any_primary_culture = {
							OR = {
								has_discrimination_trait = sinosphere
								has_discrimination_trait = han_chinese
							}
						}
					}
					any_scope_state = {
						OR = {
							region = sr:region_north_china
							region = sr:region_south_china
						}
						NOT = { has_variable = china_state_foreign_owned }
						state_population > 3500000
					}
					#code to check if you already have a chinese dominion and puppet
				}
				every_scope_state = {
					limit = {
						OR = {
							region = sr:region_north_china
							region = sr:region_south_china
						}
						state_population >= 3500000
						NOT = { has_variable = china_state_foreign_owned }
					}
					set_variable = chinese_state_to_cede
				}
				random_scope_state = {
					limit = {
						has_variable = chinese_state_to_cede
					}
					save_scope_as = china_puppet_capital_scope
				}
				create_dynamic_country = {
					origin = root
					country_type = colonial
					tier = principality
					capital = scope:china_puppet_capital_scope
					cede_state_trigger = {
						has_variable = chinese_state_to_cede
					}
					on_created = {
						set_variable = china_subject_var
						every_scope_state = {
							remove_variable = chinese_state_to_cede
							set_variable = china_state_foreign_owned
						}
						add_primary_culture = cu:han
						activate_law = law_type:law_industry_banned
						activate_law = law_type:law_republic
						activate_law = law_type:law_total_separation
					}
				}
				create_diplomatic_pact = {
					country = scope:china_puppet_capital_scope.owner
					type = dominion
				}
				create_truce = {
					country = scope:china_puppet_capital_scope.owner
					months = 60
				}
			}
		}
	}
}

france_pop_growth = {
	effect = {
		if = {
			limit = {
				NOT = { has_global_variable = french_pop_nerf }
			}
			c:FRA = {	
				every_scope_state = {
					limit = {
						NOT = { state_region = s:STATE_ALSACE_LORRAINE }
						state_is_in_europe = yes
					}
					add_modifier = {
						name = france_baby_bust			
						is_decaying = yes
						years = 100
					}
					add_modifier = {
						name = france_early_game_birth_fix			
						is_decaying = yes
						years = 20
					}
					set_global_variable = french_pop_nerf
				}
			}
		}
	}
}

HMPS_rr_counting = {
	effect = {
		# when a railroad finishes expanding, increase railroad variable
		if = {
			limit = {
				is_building_type = building_railway
			}
			this.owner = {
				trigger_event = {
					id = "railroad_bubble.1"
				}
			}
		}
	}
}

decentralized_pop_fix = {
	effect = {
		every_country = {
			limit = {
				is_country_type = decentralized
			}
			every_scope_state = {
				limit = {
					NOT = {
						has_modifier = decentralized_sol
					}
				}
				add_modifier = {
					name = decentralized_sol
				}
			}
		}
		every_country = {
			limit = {
				NOT = { is_country_type = decentralized }
			}
			every_scope_state = {
				limit = {
					has_modifier = decentralized_sol
				}
				add_modifier = {
					name = decentralized_sol
				}
			}
		}
	}
}

HMPS_China_Ports_Fracture = {
	effect = {
		if = {
			limit = {
				has_journal_entry = je_warlord_china
			}
			every_state = {
				limit = {
					state_region = {
						OR = {
							is_homeland = cu:han
							is_homeland = cu:manchu
						}
					}
					ROOT ?= owner
					is_split_state = yes
					NOT = { has_modifier = chinese_treaty_port }
				}
				add_modifier = {
					name = chinese_treaty_port
				}
				owner = {
					change_global_variable = {
						name = china_warlord_explosion
						add = 0.2
					}
				}
			}
			every_state = {
				limit = {
					is_split_state = no
					ROOT ?= owner
					has_modifier = chinese_treaty_port
				}
				remove_modifier = chinese_treaty_port
				owner = {
					change_global_variable = {
						name = china_warlord_explosion
						add = -0.1
					}
				}
			}
		}
	}
}